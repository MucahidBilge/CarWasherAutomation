// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Program.DAL.Context;

#nullable disable

namespace Program.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20230928135420_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Program.DATA.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscriber")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubscribeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscribeEndingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscribeType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9415),
                            IsActive = true,
                            IsSubscriber = false,
                            Name = "Mustafa Tez",
                            SubscribeType = 3
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9419),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "Mert Demirci",
                            SubscribeDate = new DateTime(2023, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9425),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "Levent Adnan",
                            SubscribeDate = new DateTime(2023, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9426),
                            IsActive = true,
                            IsSubscriber = false,
                            Name = "Havva Temel",
                            SubscribeType = 3
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9428),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "İdris Bahadır",
                            SubscribeDate = new DateTime(2022, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 2
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9430),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "Okan Şahin",
                            SubscribeDate = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 0
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9431),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "Turgay Mert",
                            SubscribeDate = new DateTime(2023, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 0
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9433),
                            IsActive = true,
                            IsSubscriber = true,
                            Name = "Gözde Emrah",
                            SubscribeDate = new DateTime(2023, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscribeType = 2
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9435),
                            IsActive = true,
                            IsSubscriber = false,
                            Name = "Rıdvan Demir",
                            SubscribeType = 3
                        });
                });

            modelBuilder.Entity("Program.DATA.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Unknown",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9626),
                            FirstName = "Unknown",
                            IsActive = true,
                            LastName = "Unknown",
                            Title = "Unknown"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Aydın/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9628),
                            FirstName = "Kağan",
                            IsActive = true,
                            LastName = "Eriş",
                            Title = "Washer"
                        },
                        new
                        {
                            ID = 3,
                            Address = "Bursa/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9629),
                            FirstName = "Mehmet Mücahid",
                            IsActive = true,
                            LastName = "Bilge",
                            Title = "Washer"
                        },
                        new
                        {
                            ID = 4,
                            Address = "Ankara/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9630),
                            FirstName = "Ali Furkan",
                            IsActive = true,
                            LastName = "Terzi",
                            Title = "Washer"
                        },
                        new
                        {
                            ID = 5,
                            Address = "İzmir/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9631),
                            FirstName = "İsmail",
                            IsActive = true,
                            LastName = "Tosun",
                            Title = "Washer"
                        },
                        new
                        {
                            ID = 6,
                            Address = "İstanbul/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9632),
                            FirstName = "Hakan",
                            IsActive = true,
                            LastName = "Varyemez",
                            Title = "Washer"
                        },
                        new
                        {
                            ID = 7,
                            Address = "Mersin/Türkiye",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9633),
                            FirstName = "Metin",
                            IsActive = true,
                            LastName = "Tekin",
                            Title = "Washer"
                        });
                });

            modelBuilder.Entity("Program.DATA.Entities.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaterialPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9648),
                            IsActive = true,
                            MaterialName = "Car wash brush",
                            MaterialPrice = 50m,
                            Stock = 200,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9652),
                            IsActive = true,
                            MaterialName = "High-pressure washer",
                            MaterialPrice = 250m,
                            Stock = 8,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9653),
                            IsActive = true,
                            MaterialName = "Foam cannon",
                            MaterialPrice = 35m,
                            Stock = 200,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9654),
                            IsActive = true,
                            MaterialName = "Buckets",
                            MaterialPrice = 21m,
                            Stock = 80,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9655),
                            IsActive = true,
                            MaterialName = "Water hoses",
                            MaterialPrice = 8m,
                            Stock = 25,
                            SupplierID = 5
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9656),
                            IsActive = true,
                            MaterialName = "Upholstery cleaners",
                            MaterialPrice = 15m,
                            Stock = 55,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9657),
                            IsActive = true,
                            MaterialName = "Wheel and tire brushes",
                            MaterialPrice = 15m,
                            Stock = 150,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9659),
                            IsActive = true,
                            MaterialName = "Vacuum cleaners",
                            MaterialPrice = 5m,
                            Stock = 200,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9660),
                            IsActive = true,
                            MaterialName = "Glass cleaner",
                            MaterialPrice = 6m,
                            Stock = 177,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9661),
                            IsActive = true,
                            MaterialName = "Cleaning towels",
                            MaterialPrice = 3m,
                            Stock = 250,
                            SupplierID = 2
                        });
                });

            modelBuilder.Entity("Program.DATA.Entities.MaterialWashingProcess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<int>("WashingProcessID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("WashingProcessID");

                    b.ToTable("MaterialWashingProcess");
                });

            modelBuilder.Entity("Program.DATA.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleofContact")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyName = "Breitenberg",
                            ContactName = "Roob",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9675),
                            IsActive = true,
                            TitleofContact = "Manager"
                        },
                        new
                        {
                            ID = 2,
                            CompanyName = "Johnston and Sons",
                            ContactName = "Gutkowski",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9677),
                            IsActive = true,
                            TitleofContact = "Salesman"
                        },
                        new
                        {
                            ID = 3,
                            CompanyName = "Stroman Group",
                            ContactName = "Merlyn",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9679),
                            IsActive = true,
                            TitleofContact = "Manager"
                        },
                        new
                        {
                            ID = 4,
                            CompanyName = "Boehm LLC",
                            ContactName = "Ashley",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9680),
                            IsActive = true,
                            TitleofContact = "Owner"
                        },
                        new
                        {
                            ID = 5,
                            CompanyName = "West and Sons",
                            ContactName = "Tom",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9681),
                            IsActive = true,
                            TitleofContact = "Manager"
                        });
                });

            modelBuilder.Entity("Program.DATA.Entities.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BodyType")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BodyType = 1,
                            Brand = "Volkswagen",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9545),
                            CustomerID = 1,
                            IsActive = true,
                            Model = "Golf",
                            Plate = "09 ZR 401",
                            ProductionDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            BodyType = 2,
                            Brand = "Peugeot",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9549),
                            CustomerID = 1,
                            IsActive = true,
                            Model = "3008",
                            Plate = "45 KA 4045",
                            ProductionDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            BodyType = 2,
                            Brand = "Fiat",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9551),
                            CustomerID = 2,
                            IsActive = true,
                            Model = "Egea Cross",
                            Plate = "34 RT 2401",
                            ProductionDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            BodyType = 1,
                            Brand = "Opel",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9552),
                            CustomerID = 3,
                            IsActive = true,
                            Model = "Corsa",
                            Plate = "35 TR 1985",
                            ProductionDate = new DateTime(2007, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            BodyType = 0,
                            Brand = "Toyota",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9554),
                            CustomerID = 4,
                            IsActive = true,
                            Model = "Corolla",
                            Plate = "10 KA 3000",
                            ProductionDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            BodyType = 3,
                            Brand = "Volvo",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9555),
                            CustomerID = 5,
                            IsActive = true,
                            Model = "V90 Cross",
                            Plate = "06 BG 732",
                            ProductionDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            BodyType = 4,
                            Brand = "Toyota",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9557),
                            CustomerID = 6,
                            IsActive = true,
                            Model = "Hilux",
                            Plate = "07 UJ 121",
                            ProductionDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            BodyType = 5,
                            Brand = "Ford",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9558),
                            CustomerID = 7,
                            IsActive = true,
                            Model = "Tourneo",
                            Plate = "03 ACC 665",
                            ProductionDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            BodyType = 6,
                            Brand = "Citroen",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9559),
                            CustomerID = 8,
                            IsActive = true,
                            Model = "Jumper",
                            Plate = "46 RFV 321",
                            ProductionDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            BodyType = 7,
                            Brand = "BMW",
                            CreatedDate = new DateTime(2023, 9, 28, 16, 54, 20, 568, DateTimeKind.Local).AddTicks(9561),
                            CustomerID = 9,
                            IsActive = true,
                            Model = "420D M Sport",
                            Plate = "34 TG 221",
                            ProductionDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Program.DATA.Entities.WashingProcess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQueue")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int");

                    b.Property<double?>("VehiclePollution")
                        .HasColumnType("float");

                    b.Property<decimal>("WashingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("WaterConsumption")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("VehicleID");

                    b.ToTable("WashingProcesses");
                });

            modelBuilder.Entity("Program.DATA.Entities.Material", b =>
                {
                    b.HasOne("Program.DATA.Entities.Supplier", "Supplier")
                        .WithMany("Materials")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Program.DATA.Entities.MaterialWashingProcess", b =>
                {
                    b.HasOne("Program.DATA.Entities.Material", "Material")
                        .WithMany("MaterialWashingProcesses")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Program.DATA.Entities.WashingProcess", "WashingProcess")
                        .WithMany("MaterialWashingProcesses")
                        .HasForeignKey("WashingProcessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("WashingProcess");
                });

            modelBuilder.Entity("Program.DATA.Entities.Vehicle", b =>
                {
                    b.HasOne("Program.DATA.Entities.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Program.DATA.Entities.WashingProcess", b =>
                {
                    b.HasOne("Program.DATA.Entities.Employee", "Employee")
                        .WithMany("WashingProcess")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Program.DATA.Entities.Vehicle", "Vehicle")
                        .WithMany("WashingProcess")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Program.DATA.Entities.Customer", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Program.DATA.Entities.Employee", b =>
                {
                    b.Navigation("WashingProcess");
                });

            modelBuilder.Entity("Program.DATA.Entities.Material", b =>
                {
                    b.Navigation("MaterialWashingProcesses");
                });

            modelBuilder.Entity("Program.DATA.Entities.Supplier", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Program.DATA.Entities.Vehicle", b =>
                {
                    b.Navigation("WashingProcess");
                });

            modelBuilder.Entity("Program.DATA.Entities.WashingProcess", b =>
                {
                    b.Navigation("MaterialWashingProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
